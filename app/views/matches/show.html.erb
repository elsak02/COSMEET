

<!-- <div id="starAnimation">
  <svg id="star" version="1.1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
       viewBox="0 0 291.3 277.3" enable-background="new 0 0 291.3 277.3" xml:space="preserve">
    <polygon fill="gold" points="145.5,0.2 185.2,99.4 291,105.9 209.7,174.9 235.4,276.9 145.5,221.6 55.6,276.9 81.2,174.9 0,105.9 105.8,99.4 "/>
  </svg>
 -->

<!-- <div class="js-container container"> -->
<div class="container">
  <h2 class="text-center my-4">Planets are aligned!</h2>
  <div class="d-flex justify-content-center mb-5">
      <% @match.user_matches.each do |user_match| %>
          <div class="avatar-match m-4">
            <%= cl_image_tag user_match.user.photos.first.key, class: "avatar-match" %>
            <div class="sign-match <%= user_match.user.sign.downcase %>">
            </div>
          </div>
      <% end %>
  </div>
      <% @match.user_matches.each do |user_match| %>
          <% if user_match.user != current_user %>
          <%= link_to "Discover #{user_match.user.name}", user_path(user_match.user), class: "button-match"%>
          <%= link_to "Chat with #{user_match.user.name}", chatroom_match_path(@match), class: "button-match"%>
          <% end %>
      <% end %>
  <div class="compatibility-description">
          <h3>What to expect?</h3>
           <p><%= @match_description %></p>
  </div>
<!-- </div> -->
</div>
<!-- </div> -->
<!--   <script>
    const Confettiful = function(el) {
  this.el = el;
  this.containerEl = null;

  this.confettiFrequency = 3;
  this.confettiColors = ['#fce18a', '#ff726d', '#b48def', '#f4306d'];
  this.confettiAnimations = ['slow', 'medium', 'fast'];

  this._setupElements();
  this._renderConfetti();
};

Confettiful.prototype._setupElements = function() {
  const containerEl = document.createElement('div');
  const elPosition = this.el.style.position;

  if (elPosition !== 'relative' || elPosition !== 'absolute') {
    this.el.style.position = 'relative';
  }

  containerEl.classList.add('confetti-container');

  this.el.appendChild(containerEl);

  this.containerEl = containerEl;
};

Confettiful.prototype._renderConfetti = function() {
  this.confettiInterval = setInterval(() => {
    const confettiEl = document.createElement('div');
    const confettiSize = (Math.floor(Math.random() * 3) + 7) + 'px';
    const confettiBackground = this.confettiColors[Math.floor(Math.random() * this.confettiColors.length)];
    const confettiLeft = (Math.floor(Math.random() * this.el.offsetWidth)) + 'px';
    const confettiAnimation = this.confettiAnimations[Math.floor(Math.random() * this.confettiAnimations.length)];

    confettiEl.classList.add('confetti', 'confetti--animation-' + confettiAnimation);
    confettiEl.style.left = confettiLeft;
    confettiEl.style.width = confettiSize;
    confettiEl.style.height = confettiSize;
    confettiEl.style.backgroundColor = confettiBackground;

    confettiEl.removeTimeout = setTimeout(function() {
      confettiEl.parentNode.removeChild(confettiEl);
    }, 3000);

    this.containerEl.appendChild(confettiEl);
  }, 25);
};

window.confettiful = new Confettiful(document.querySelector('.js-container'));
  </script> -->

<!--   <script>
    var tl = new TimelineMax(),
    screenH = window.innerHeight,
    star = document.getElementById('star'),
    starAnimation = document.getElementById('starAnimation');

for (var i=0; i < 1000; i++) {
  var newStar = star.cloneNode(true);
  var xPos = Math.random()*80-40;
  var rotate = Math.random()*1440-720;
  starAnimation.appendChild(newStar);
  tl.fromTo(newStar, 0.5,
    {
      opacity:0,
      top:screenH,
      rotation:rotate,
      display:'block'
    },
    {
      opacity:.9,
      width:(Math.random()*5+3)+'%',
      top:Math.random()*100,
      ease:Power1.easeOut,
      rotation:rotate/4,
      display:'block',
      left:(50+(xPos/2))+'%'
    },i/20)
    .to(newStar, 0.5, {
      opacity:0,
      rotation:0,
      top:'80%',
      left:(50+xPos)+'%',
      ease:Power1.easeIn
    },(i/20)+.45);
}

  </script>
 -->





